The ``0_add_integer`` module
======================

Using ``add_integer``
-------------------

This is a first test
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> import os
    >>> os.popen('head -1 0-add_integer.py').read()
    '#!/usr/bin/python3\n'

One: Add two positive integers
    >>> add_integer(2, 4)
    6

Two: Add positive and negative integers
    >>> add_integer(10,-6)
    4

Three: Add positive float and int
    >>> add_integer(2.4,3)
    5

Four: Add int and string
    >>> add_integer(8, "today")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Five: Add two negative floats
    >>> add_integer(-3.1,-8.2)
    -11

Six: Missing one argument a= int, b = 98
    >>> add_integer(2)
    100

Seven: Missing two arguments
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Eigth: Cannot convert float NaN to integer
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

Ten: Type
    >>> type(add_integer(3.1, 2)) == int
    True
